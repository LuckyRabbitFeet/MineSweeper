{"version":3,"sources":["webpack:///./src/images/clock_icon.png","webpack:///./src/images/flag_icon.png","webpack:///./src/images/trophy_icon.png","webpack:///./src/redux/modules/level/index.js","webpack:///./src/redux/modules/timer/index.js","webpack:///./src/redux/modules/mines/index.js","webpack:///./src/utils/matrix.js","webpack:///./src/redux/configureStore.js","webpack:///./src/redux/modules/matrix/index.js","webpack:///./src/redux/modules/gameStatus/index.js","webpack:///./src/redux/modules/score/index.js","webpack:///./src/redux/modules/index.js","webpack:///./src/conpontens/header/selectLevel/index.js","webpack:///./src/conpontens/header/remainingFlag/index.js","webpack:///./src/conpontens/header/clock/index.js","webpack:///./src/conpontens/reset/index.js","webpack:///./src/conpontens/header/index.js","webpack:///./src/conpontens/minefields/block/index.js","webpack:///./src/conpontens/minefields/index.js","webpack:///./src/conpontens/finish/index.js","webpack:///./src/utils/index.js","webpack:///./src/utils/game.js","webpack:///./src/containers/App/index.js","webpack:///./src/index.js"],"names":["module","exports","types","reducer","state","action","type","data","SET_TIMER","reduser","blockTypes","close","open","flag","mistake","initLine","col","line","i","push","initMatrix","row","matrix","finalCreateStore","around","initMinefields","options","rows","cols","mines","safeArea","Array","fill","mineArea","totalArea","concat","dataList","num","arr","newArr","length","splice","arrTrans","array","index","mine","count","Math","floor","random","mineShuffle","forEach","rowIndex","colIndex","offset","undefined","fillEnvNum","initState","gameStatusList","combineReducers","level","timer","gameStatus","bestScore","createStore","initialState","SelectLevel","onChangeLevel","useState","showMenu","setShowMenu","handleCheckShow","event","nativeEvent","stopImmediatePropagation","useEffect","clickHandle","document","addEventListener","removeEventListener","className","onClick","easy","normal","hard","style","visibility","RemainingFlag","src","flagIcon","timeoutMark","Clock","props","nextProps","nextState","clearTimeout","time","prevProps","handleTimer","setTime","newTime","onScore","setState","setTimeout","clock","toString","padStart","React","Component","Reset","onReset","children","Header","onRestart","colorList","Block","blockStatus","size","max","clickBlock","e","preventDefault","color","blockClassList","blockClass","classNames","width","height","fontSize","lineHeight","boomColor","getRandomInt","background","borderColor","leftHandle","onContextMenu","rightHandle","Minefields","blockSize","minefieldsInfo","minefieldsHandle","openAllBlock","map","p","k1","key","k2","newBlockType","btnType","x","y","Finish","score","classObj","clockIcon","trophyIcon","bestScoreRecord","localStorage","getItem","JSON","parse","window","console","error","gameLevel","connect","dispath","switchLevel","newLevel","levelTypes","setNumberOfMines","minesTypes","setMatrix","matrixTypes","setGameStatus","gameStatusTypes","minefields","setMinefields","settlementWindow","setSettlementWindow","setOpenAll","log","loseAnimate","remainClose","getMinefielosInfo","result","returnPoints","remainMines","gameVictory","gameOver","reset","newState","nowLevel","newScore","stringify","setItem","setNewMatrix","callback","newMatrix","r","c","checkArray","find","findIndex","points","aimPoint","alterFlag","uiInfo","point","autoPoint","autoOpenSafe","centerPoint","openPoint","store","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"js/main.js","sourcesContent":["module.exports = __webpack_public_path__ + \"images/clock_icon.png\";","module.exports = __webpack_public_path__ + \"images/flag_icon.png\";","module.exports = __webpack_public_path__ + \"images/trophy_icon.png\";","export const types = {\r\n  GAME_LEVEL: 'GAME_LEVEL'\r\n}\r\n\r\nexport const actions = {\r\n  setLevel: (data) => ({\r\n    type: 'GAME_LEVEL',\r\n    data\r\n  })\r\n}\r\n\r\nconst reducer = (state = 'normal', action) => {\r\n  switch (action.type) {\r\n    case types.GAME_LEVEL:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","export const types = {\r\n  SET_TIMER: 'SET_TIMER'\r\n}\r\n\r\nexport const actions = {\r\n  setTimer: (data) => ({\r\n    type: types.TIMER,\r\n    data\r\n  })\r\n}\r\n\r\nconst reduser = (state = 'stop', action) => {\r\n  switch (action.type) {\r\n    case types.SET_TIMER:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reduser","export const types = {\r\n  MINES: 'SET_MINES'\r\n}\r\n\r\nexport const actions = {\r\n  setNumberOfMines: (data) => ({\r\n    type: types.MINES,\r\n    data\r\n  })\r\n}\r\n\r\nconst reduser = (state = 40, action) => {\r\n  switch (action.type) {\r\n    case types.MINES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reduser","export const blockTypes = {\r\n  close: 0,\r\n  open: 1,\r\n  flag: 2,\r\n  mistake: 3\r\n}\r\n\r\nconst initLine = (col) => {\r\n  const line = []\r\n  for (let i = 0; i < col; ++i) {\r\n    line.push(blockTypes.close)\r\n  }\r\n  return line\r\n}\r\n\r\n// 初始化矩阵\r\nexport const initMatrix = (row, col) => {\r\n  const matrix = []\r\n  for (let i = 0; i < row; ++i) {\r\n    matrix.push(initLine(col))\r\n  }\r\n  return matrix\r\n}\r\n\r\n// Fisher–Yates shuffle 算法\r\nconst mineShuffle = (array, mine = array.length) => {\r\n  let count = mine\r\n  let index\r\n  while (count) {\r\n    index = Math.floor(Math.random() * count--)\r\n    ;[array[count], array[index]] = [array[index], array[count]]\r\n  }\r\n  return array\r\n}\r\n\r\n// 分裂数组\r\nfunction arrTrans(num, arr) {\r\n  const newArr = []\r\n  while(arr.length > 0) {\r\n    newArr.push(arr.splice(0, num))\r\n  }\r\n  return newArr\r\n}\r\n\r\nexport const around = [\r\n  [-1, -1],\r\n  [-1, 0],\r\n  [-1, 1],\r\n  [0, -1],\r\n  [0, 1],\r\n  [1, -1],\r\n  [1, 0],\r\n  [1, 1]\r\n]\r\n\r\n// 填充环境数据\r\nconst fillEnvNum = (dataList) => {\r\n  dataList.forEach((row, rowIndex) => {\r\n    row.forEach((col, colIndex) => {\r\n      if (col === 9) {\r\n        around.forEach(offset => {\r\n          const row = rowIndex + offset[0]\r\n          const col = colIndex + offset[1]\r\n          if (\r\n            dataList[row] &&\r\n            dataList[row][col] !== undefined &&\r\n            dataList[row][col] !== 9\r\n          ){\r\n            ++dataList[row][col]\r\n          }\r\n        })\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// 初始化雷区\r\nexport const initMinefields = (options) => {\r\n  const {rows, cols, mines} = options\r\n  const safeArea = (new Array(rows * cols - mines)).fill(0)\r\n  const mineArea = (new Array(mines)).fill(9)\r\n  let totalArea = safeArea.concat(mineArea)\r\n  totalArea = mineShuffle(totalArea)\r\n  let dataList = arrTrans(cols, totalArea)\r\n  fillEnvNum(dataList)\r\n  return dataList\r\n}","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport rootReducer from \"./modules\"\r\n\r\nlet finalCreateStore\r\n// 如果程序运行在非生产模式下，且浏览器安装了调试插件，则创建包含调试插件的store\r\nif (process.env.NODE_ENV !== \"production\" && window.__REDUX_DEVTOOLS_EXTENSION__ ) {\r\n  finalCreateStore = compose(window.__REDUX_DEVTOOLS_EXTENSION__())(createStore)\r\n} else {\r\n  finalCreateStore = createStore\r\n}\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = finalCreateStore(rootReducer, initialState)\r\n\r\n  // 支持reducer的热加载\r\n  if (process.env.NODE_ENV !== \"production\" && module.hot) {\r\n    module.hot.accept(\"./modules\", () =>\r\n      store.replaceReducer(require(\"./modules\"))\r\n    )\r\n  }\r\n\r\n  return store\r\n}","import { initMatrix } from '../../../utils/matrix'\r\n\r\nconst initState = initMatrix(14, 18)\r\n\r\nexport const types = {\r\n  MATRIX: 'SET_MATRIX'\r\n}\r\n\r\nexport const actions = {\r\n  setMatrix: (data) => ({\r\n    type: types.MATRIX,\r\n    data\r\n  })\r\n}\r\n\r\nconst reduser = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.MATRIX:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reduser","export const types = {\r\n  SET_GAME_STATUS: 'SET_GAME_STATUS'\r\n}\r\n\r\nexport const gameStatusList = {\r\n  waiting: 'waiting',\r\n  running: 'running',\r\n  win: 'win',\r\n  lose: 'lose'\r\n}\r\n\r\nexport const actions = {\r\n  setGameStatus: (data) => ({\r\n    type: types.SET_GAME_STATUS,\r\n    data\r\n  }),\r\n  // gameWaiting: () => ({\r\n  //   type: types.GAME_WAITING\r\n  // }),\r\n  // gameRunning: () => ({\r\n  //   type: types.GAME_RUNNING\r\n  // }),\r\n  // gameWin: () => ({\r\n  //   type: types.GAME_WIN\r\n  // }),\r\n  // gameLose: () => ({\r\n  //   type: types.GAME_LOSE\r\n  // }),\r\n  // gameFinish: () => ({\r\n  //   type: type.GAME_FINISH\r\n  // })\r\n}\r\n\r\nconst reduser = (state = gameStatusList.waiting, action) => {\r\n  switch (action.type) {\r\n    case types.SET_GAME_STATUS:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reduser","export const types = {\r\n  SET_BEST_SCORE: 'SET_BEST_SCORE'\r\n}\r\n\r\nexport const actions = {\r\n  setScore: (data) => ({\r\n    type: types.SET_BEST_SCORE,\r\n    data\r\n  })\r\n}\r\n\r\nconst reduser = (state = '---', action) => {\r\n  switch (action.type) {\r\n    case types.SET_BEST_SCORE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reduser","import { combineReducers } from \"redux\"\r\n\r\nimport level from './level'\r\nimport timer from './timer'\r\nimport mines from './mines'\r\nimport matrix from './matrix'\r\nimport reset from './reset'\r\nimport gameStatus from './gameStatus'\r\nimport bestScore from './score'\r\n\r\nexport default combineReducers({\r\n  level,\r\n  timer,\r\n  mines,\r\n  matrix,\r\n  gameStatus,\r\n  bestScore\r\n})","import React, { useState, useEffect } from 'react'\r\nimport './index.css'\r\n\r\nconst SelectLevel = ({level, onChangeLevel}) => {\r\n  const [showMenu, setShowMenu] = useState(false)\r\n\r\n  const levelList = {\r\n    easy: '低难度',\r\n    normal: '中等难度',\r\n    hard: '高难度'\r\n  }\r\n\r\n  const handleCheckShow = (event) => {\r\n    event.nativeEvent.stopImmediatePropagation()\r\n    setShowMenu(!showMenu)\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    const clickHandle= () => {\r\n      if (showMenu) {\r\n        setShowMenu(false)\r\n      }\r\n    }\r\n    document.addEventListener('click', clickHandle)\r\n    return () => {\r\n      document.removeEventListener('click', clickHandle)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"select\">\r\n      <p onClick={handleCheckShow}>{levelList[level]}<span className=\"dorp-icon\"></span></p>\r\n      <div className=\"select-menu\"\r\n      style={{visibility: showMenu ? 'visible' : null}}\r\n      onClick={handleCheckShow}>\r\n        <ul>\r\n          <li className={level === 'easy' ? 'selected' : null}\r\n            onClick={() => onChangeLevel('easy')}>\r\n            <div>低难度</div>\r\n          </li>\r\n          <li className={level === 'normal' ? 'selected' : null}\r\n            onClick={() => onChangeLevel('normal')}>\r\n            <div>中等难度</div>\r\n          </li>\r\n          <li className={level === 'hard' ? 'selected' : null}\r\n            onClick={() => onChangeLevel('hard')}>\r\n            <div>高难度</div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// class SelectLevel1 extends React.Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       showMenu: false\r\n//     }\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     document.addEventListener('click', () => {\r\n//       console.log('click')\r\n//       if (this.state.showMenu) {\r\n//         console.log(this.state.showMenu)\r\n//         this.setShowMenu()\r\n//         console.log(this.state.showMenu)\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   setShowMenu = () => {\r\n//     this.setState({\r\n//       showMenu: !this.state.showMenu\r\n//     })\r\n//   }\r\n\r\n//   handleCheckShow = (event) => {\r\n//     event.nativeEvent.stopImmediatePropagation()\r\n//     console.log('check1', this.state.showMenu)\r\n//     this.setShowMenu()\r\n//     console.log('check2', this.state.showMenu)\r\n//   }\r\n\r\n//   render() {\r\n//     const levelList = {\r\n//       easy: '低难度',\r\n//       normal: '中等难度',\r\n//       hard: '高难度'\r\n//     }\r\n\r\n//     const {level, switchLevel} = this.props\r\n\r\n//     return (\r\n//       <div className=\"select\">\r\n//         <p onClick={this.handleCheckShow}>{levelList[level]}<span className=\"dorp-icon\"></span></p>\r\n//         <div className=\"select-menu\"\r\n//         style={{visibility: this.state.showMenu ? 'visible' : null}}\r\n//         onClick={this.handleCheckShow}>\r\n//           <ul>\r\n//             <li className={level === 'easy' ? 'selected' : null}\r\n//               onClick={() => switchLevel('easy')}>\r\n//               <div>低难度</div>\r\n//             </li>\r\n//             <li className={level === 'normal' ? 'selected' : null}\r\n//               onClick={() => switchLevel('normal')}>\r\n//               <div>中等难度</div>\r\n//             </li>\r\n//             <li className={level === 'hard' ? 'selected' : null}\r\n//               onClick={() => switchLevel('hard')}>\r\n//               <div>高难度</div>\r\n//             </li>\r\n//           </ul>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default SelectLevel","import React from 'react'\r\nimport flagIcon from '../../../images/flag_icon.png'\r\nimport './index.css'\r\n\r\nlet RemainingFlag = ({mines}) => {\r\n  return (\r\n    <div className=\"remaining-flag\">\r\n      <img src={flagIcon} /><span>{mines}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RemainingFlag","import React from 'react'\r\n\r\nimport clock from '../../../images/clock_icon.png'\r\nimport './index.css'\r\n\r\nlet timeoutMark = null\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      time: 0\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate = (nextProps, nextState) => {\r\n    if (nextProps.gameStatus !== 'running') {\r\n      if (timeoutMark !== null) {\r\n        clearTimeout(timeoutMark)\r\n        timeoutMark = null\r\n      }\r\n    }\r\n    if (nextProps.gameStatus === this.props.gameStatus\r\n      && nextState.time === this.state.time\r\n    ) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (prevProps.gameStatus !== this.props.gameStatus) {\r\n      if (this.props.gameStatus === 'running') {\r\n        this.handleTimer()\r\n      } else if (this.props.gameStatus === 'waiting') {\r\n        this.setTime(0)\r\n      }\r\n    }\r\n  }\r\n\r\n  setTime = (newTime) => {\r\n    this.props.onScore(newTime)\r\n    this.setState({\r\n      time: newTime\r\n    })\r\n  }\r\n\r\n  handleTimer = () => {\r\n    timeoutMark = setTimeout(() => {\r\n      if (this.state.time < 999) {\r\n        this.setTime(this.state.time + 1)\r\n      }\r\n      this.handleTimer()\r\n    }, 1000)\r\n  }\r\n\r\n  render = () => (\r\n    <div className=\"clock\">\r\n      <img src={clock} />\r\n      <span>{\r\n        this.state.time.toString().padStart(3, '0')\r\n      }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clock","import React from 'react'\r\n\r\nimport './index.css'\r\n\r\nconst Reset = ({onReset, children}) => {\r\n  const resetHandle = () => {\r\n    onReset()\r\n  }\r\n  return (\r\n    <div className=\"reset\"\r\n      onClick={resetHandle}\r\n    >\r\n      <span className=\"reset-icon\"></span>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reset","import React from 'react'\r\n\r\nimport SelectLevel from './selectLevel'\r\nimport RemainingFlag from './remainingFlag'\r\nimport Clock from './clock'\r\nimport Reset from '../reset'\r\n\r\nimport './index.css'\r\n\r\nlet Header = ({level, mines, gameStatus, onScore, onChangeLevel, onRestart}) => {\r\n  return (\r\n    <header>\r\n      <div className=\"header-wrapper\">\r\n        <div className=\"meun-bar\">\r\n          <div>\r\n            <SelectLevel level={level} onChangeLevel={onChangeLevel} />\r\n          </div>\r\n          <div>\r\n            <div className=\"flag-wrapper\">\r\n              <RemainingFlag mines={mines} />\r\n            </div>\r\n            <div className=\"clock-wrapper\">\r\n              <Clock\r\n                gameStatus={gameStatus}\r\n                onScore={onScore}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"features-wrapper\">\r\n              <Reset onReset={onRestart} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { blockTypes } from '../../../utils/matrix.js'\r\n\r\nimport './index.css'\r\n\r\nconst colorList = [\r\n  '#1976D2',\r\n  '#388E3C',\r\n  '#D32F2F',\r\n  '#7B1FA2',\r\n  '#FF8F00',\r\n  '#48E6F1',\r\n  '#ED44B5',\r\n  '#F4C20d'\r\n]\r\n\r\nclass Block extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  shouldComponentUpdate = (nextProps) => {\r\n    if (this.props.blockStatus === nextProps.blockStatus\r\n      && this.props.size === nextProps.size\r\n      && this.props.children === nextProps.children\r\n    ) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  getRandomInt = (max) => {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n\r\n  leftHandle = () => {\r\n    this.props.clickBlock(blockTypes.open)\r\n  }\r\n\r\n  rightHandle = (e) => {\r\n    e.preventDefault()\r\n    if (this.props.blockStatus === blockTypes.close) {\r\n      this.props.clickBlock(blockTypes.flag, 1)\r\n    } else if (this.props.blockStatus === blockTypes.flag) {\r\n      this.props.clickBlock(blockTypes.close, 1)\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    const { color, size, blockStatus, children } = this.props\r\n\r\n    const blockClassList = {\r\n      'close-0': color && (blockStatus === blockTypes.close || blockStatus === blockTypes.flag),\r\n      'close-1': !color && (blockStatus === blockTypes.close || blockStatus === blockTypes.flag),\r\n      'open-0': color && blockStatus === blockTypes.open,\r\n      'open-1': !color && blockStatus === blockTypes.open,\r\n      'flag': blockStatus === blockTypes.flag,\r\n      'boom': blockStatus === blockTypes.open && children === 9,\r\n      //'is-boom': children === 9\r\n    }\r\n    if (children > 0 && children < 9) {\r\n      blockClassList['mine-' + children] = (blockStatus === blockTypes.open)\r\n    }\r\n    \r\n    const blockClass = classNames(\r\n      'block',\r\n      blockClassList\r\n    )\r\n\r\n    const style = {\r\n      width: `calc(${size} - 6px)`,\r\n      height: `calc(${size} - 6px)`,\r\n      fontSize: `calc(${size} - 6px)`,\r\n      lineHeight: `calc(${size} - 6px)`\r\n    }\r\n    if (blockStatus === blockTypes.open && children === 9) {\r\n      const boomColor = this.getRandomInt(8)\r\n      style.background = colorList[boomColor]\r\n      style.borderColor = colorList[boomColor]\r\n    }\r\n\r\n    return (\r\n      <span\r\n        className={blockClass}\r\n        style={style}\r\n        onClick={blockStatus === blockTypes.close ? this.leftHandle : null}\r\n        onContextMenu={this.rightHandle}\r\n      >\r\n        {\r\n          (children > 0 && children < 9 && blockStatus === blockTypes.open) ? children : ''\r\n        }\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Block","import React from 'react'\r\nimport Block from './block'\r\n\r\nimport { blockTypes } from '../../utils/matrix'\r\n\r\nlet Minefields = ({blockSize, matrix, minefieldsInfo, clickBlock, minefieldsHandle, openAllBlock}) => {\r\n  return (\r\n    <div className=\"minefields\" onClick={minefieldsHandle}>\r\n      {\r\n        matrix.map((p, k1) => (\r\n          <p key={k1}\r\n            style={{height: blockSize}}\r\n          >\r\n            {\r\n              p.map((e, k2) => (\r\n                <Block key={k2}\r\n                  color={k1 % 2 === 0 ? (k2 % 2 === 0) : !(k2 % 2 === 0)}\r\n                  size={blockSize}\r\n                  blockStatus={openAllBlock ? blockTypes.open : e}\r\n                  clickBlock={(newBlockType, btnType) => clickBlock({x: k2, y: k1}, newBlockType, btnType)}\r\n                >\r\n                  {minefieldsInfo[k1][k2]}\r\n                </Block>\r\n              ))\r\n            }\r\n          </p>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Minefields","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport Reset from '../reset'\r\nimport { gameStatusList } from '../../redux/modules/gameStatus'\r\n\r\nimport clockIcon from '../../images/clock_icon.png'\r\nimport trophyIcon from '../../images/trophy_icon.png'\r\n\r\nimport './index.css'\r\n\r\nconst Finish = ({gameStatus, score, bestScore, onRestart}) => {\r\n  const classObj = classNames('finish-score', {\r\n    'win': gameStatus !== gameStatusList.lose,\r\n    'lose': gameStatus === gameStatusList.lose,\r\n  })\r\n  return (\r\n    <div className=\"finish\">\r\n      <div className={classObj}>\r\n        <div className=\"finish-time\">\r\n          <img src={clockIcon} />\r\n          <span>{gameStatus === 'win' ? score.toString().padStart(3, '0') : '–––'}</span>\r\n        </div>\r\n        <div className=\"best-score\">\r\n          <img src={trophyIcon} />\r\n          <span>{bestScore ? bestScore.toString().padStart(3, '0') : '–––'}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"finish-btn\">\r\n        <Reset onReset={onRestart}>\r\n          {gameStatus === 'win' ? '再玩一次吧' : '再试一次吧'}\r\n        </Reset>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Finish","const StorageKey = 'REACT_MineSweeper'\r\n\r\n// 从 localStorage 获取最好成绩记录\r\nexport const bestScoreRecord = (() => {\r\n  let data = localStorage.getItem(StorageKey)\r\n  if (!data) {\r\n    return false\r\n  }\r\n  try {\r\n    data = JSON.parse(data)\r\n  } catch (e) {\r\n    if (window.console || window.console.error) {\r\n      window.console.error('读取记录错误:', e)\r\n    }\r\n    return false\r\n  }\r\n  return data\r\n})()\r\n\r\n// 将最好成绩记录到 localStorage\r\nexport const subscribeScore = (data) => {\r\n  data = JSON.stringify(data);\r\n  localStorage.setItem(StorageKey, data)\r\n}","export const gameLevel = {\r\n  easy: {\r\n    rows: 8,\r\n    cols: 10,\r\n    mines: 10\r\n  },\r\n  normal: {\r\n    rows: 14,\r\n    cols: 18,\r\n    mines: 40\r\n  },\r\n  hard: {\r\n    rows: 20,\r\n    cols: 24,\r\n    mines: 99\r\n  }\r\n}\r\n\r\nexport const defaultLevel = {\r\n  rows: 14,\r\n  cols: 18,\r\n  mines: 40  \r\n}","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\n\r\nimport Header from '../../conpontens/header'\r\nimport Minefields from '../../conpontens/minefields'\r\nimport Finish from '../../conpontens/finish'\r\nimport Devtools from '../../conpontens/devtools'\r\n\r\nimport { types as levelTypes } from '../../redux/modules/level'\r\nimport { types as minesTypes } from '../../redux/modules/mines'\r\nimport { types as matrixTypes } from '../../redux/modules/matrix'\r\nimport { types as gameStatusTypes, gameStatusList } from '../../redux/modules/gameStatus'\r\n\r\nimport { bestScoreRecord, subscribeScore } from '../../utils'\r\nimport { gameLevel } from '../../utils/game'\r\nimport { initMatrix, initMinefields, blockTypes, around } from '../../utils/matrix'\r\nimport uiInfo from '../../utils/uiInfo.json'\r\nimport './index.css'\r\n\r\nlet timeoutMark = null\r\nlet bestScore = bestScoreRecord ? bestScoreRecord : {}\r\nlet score = 999\r\n\r\nconst App = (props) => {\r\n  const {level, mines, matrix, gameStatus} = props\r\n  const {switchLevel, setNumberOfMines, setMatrix, setGameStatus} = props\r\n  // 雷区数据/设置雷区数据\r\n  const [minefields, setMinefields] = useState(initMinefields(gameLevel[level]))\r\n  // 结算窗口显示状态\r\n  const [settlementWindow, setSettlementWindow] = useState(false)\r\n  // 测试功能：打开雷区\r\n  const [openAllBlock, setOpenAll] = useState(false)\r\n\r\n  useEffect(() => {\r\n    console.log(minefields)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (gameStatus === gameStatusList.lose) {\r\n      loseAnimate()\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (gameStatus === gameStatusList.running) {\r\n      const remainClose = getMinefielosInfo({\r\n        result:'remainClose',\r\n        returnPoints: false\r\n      }).count\r\n      const remainMines = getMinefielosInfo({\r\n        result:'remainMines',\r\n        returnPoints: false\r\n      }).count\r\n      if ((remainClose - remainMines) <= 0) {\r\n        gameVictory()\r\n      }\r\n      if (remainMines < gameLevel[level].mines) {\r\n        gameOver()\r\n      }\r\n    }\r\n  }, [matrix])\r\n\r\n  const setMinefieldsMiddleware = (newState) => {\r\n    console.log(newState)\r\n    setMinefields(newState)\r\n  }\r\n\r\n  // 重置\r\n  const reset = (newLevel) => {\r\n    const nowLevel = (newLevel === undefined ? level : newLevel)\r\n\r\n    setOpenAll(false)\r\n\r\n    setGameStatus(gameStatusList.waiting)\r\n    setNumberOfMines(gameLevel[nowLevel].mines)\r\n    setMinefieldsMiddleware(initMinefields(gameLevel[nowLevel]))\r\n    setMatrix(initMatrix(gameLevel[nowLevel].rows, gameLevel[nowLevel].cols))\r\n    setSettlementWindow(false)\r\n  }\r\n\r\n  // 切换难度\r\n  const changeLevel = (newLevel) => {\r\n    if (gameStatus === gameStatusList.waiting || gameStatus === gameStatusList.running) {\r\n      switchLevel(newLevel)\r\n      reset(newLevel)\r\n    }\r\n  }\r\n\r\n  // 游戏胜利\r\n  const gameVictory = () => {\r\n    const setBestScore = (newScore) => {\r\n      if (!bestScore[level]\r\n        || newScore < bestScore[level]\r\n      ) {\r\n        bestScore[level] = newScore\r\n        subscribeScore(bestScore)\r\n      }\r\n    }\r\n    setGameStatus(gameStatusList.win)\r\n    setBestScore(score)\r\n    setSettlementWindow(true)\r\n  }\r\n\r\n  // 游戏失败\r\n  const gameOver = () => {\r\n    setGameStatus(gameStatusList.lose)\r\n  }\r\n\r\n  // 设置新的状态矩阵\r\n  const setNewMatrix = (callback) => {\r\n    const newMatrix = matrix.map((r, y) => (\r\n      r.map((c, x) => {\r\n        return callback(r, c, x, y)\r\n      })\r\n    ))\r\n    setMatrix(newMatrix)\r\n  }\r\n\r\n  // 检查数组中是否出现过相同值\r\n  const checkArray = (arr, find) => {\r\n    const flag = arr.findIndex(e => e[0] === find[0] && e[1] === find[1])\r\n    return flag === -1 ? false : true\r\n  }\r\n\r\n  // 自动打开周围的安全块\r\n  const autoOpenSafe = (centerPoint, openPoint) => {\r\n    if (minefields[centerPoint.y]\r\n      && minefields[centerPoint.y][centerPoint.x] === 0\r\n    ) {\r\n      around.forEach(offset => {\r\n        const x = centerPoint.x + offset[0]\r\n        const y = centerPoint.y + offset[1]\r\n        if (minefields[y]\r\n          && minefields[y][x] < 9\r\n          && matrix[y][x] === blockTypes.close\r\n          && !checkArray(openPoint, [x, y])\r\n        ) {\r\n          openPoint.push([x, y])\r\n          autoOpenSafe({x, y}, openPoint)\r\n        }\r\n      })     \r\n    }\r\n  }\r\n\r\n  // 获取雷区信息\r\n  // options\r\n  // {\r\n  //   result: 'remainMines' | 'remainMinesNoFlag' | 'remainClose'\r\n  //   returnPoints: true | false\r\n  // }\r\n  const getMinefielosInfo = (options) => {\r\n    let count = 0\r\n    const points = []\r\n    let flag\r\n\r\n    switch (options.result) {\r\n      case 'remainMines':\r\n        flag = (x, y, c) => (c === 9 && (matrix[y][x] === blockTypes.close || matrix[y][x] === blockTypes.flag))\r\n        break\r\n      case 'remainMinesNoFlag':\r\n        flag = (x, y, c) => (c === 9 && matrix[y][x] === blockTypes.close)\r\n        break\r\n      case 'remainClose':\r\n        flag = (x, y) => (matrix[y][x] === blockTypes.close)\r\n        break\r\n      default:\r\n        throw 'getMinefielosInfo: result is not allowed value'\r\n    }\r\n    minefields.forEach((r, y) => (\r\n      r.forEach((c, x) => {\r\n        if (flag(x, y, c)) {\r\n          ++count\r\n          if (options.returnPoints) {\r\n            points.push([x, y])\r\n          }\r\n        }\r\n      })\r\n    ))\r\n    return {\r\n      count,\r\n      points\r\n    }\r\n  }\r\n\r\n  // 失败动画\r\n  const loseAnimate = () => {\r\n    const showAllMines = () => {\r\n      if (timeoutMark !== null) {\r\n        clearTimeout(timeoutMark)\r\n        timeoutMark = null\r\n      }\r\n      setNewMatrix((r, c, x, y) => {\r\n        if (c === blockTypes.close\r\n          && minefields[y][x] === 9\r\n        ) {\r\n          return blockTypes.open\r\n        }\r\n        return c\r\n      })\r\n    }\r\n    const {count, points} = getMinefielosInfo({\r\n      result: 'remainMinesNoFlag',\r\n      returnPoints: true\r\n    })\r\n    if (count === 0 && !settlementWindow) {\r\n      setSettlementWindow(true)\r\n    } else if (count > 0 && settlementWindow) {\r\n      showAllMines()\r\n    } else if (count > 0) {\r\n      timeoutMark = setTimeout(() => {\r\n        const aimPoint = points[Math.floor(Math.random() * count)]\r\n        if (aimPoint.length === 2) {\r\n          setNewMatrix((r, c, x, y) => {\r\n            if (x === aimPoint[0]\r\n              && y === aimPoint[1]\r\n              && c === blockTypes.close\r\n              && minefields[y][x] === 9\r\n            ) {\r\n              return blockTypes.open\r\n            }\r\n            return c\r\n          })\r\n        }\r\n      }, Math.floor(Math.random() * (260 - 100) + 100)) // random range [100, 260)\r\n    }\r\n  }\r\n\r\n  const onScore = (newScore) => {\r\n    score = newScore\r\n  }\r\n\r\n  // 重置游戏事件处理\r\n  const restartClick = () => {\r\n    if (gameStatus === gameStatusList.waiting || gameStatus === gameStatusList.running) {\r\n      reset()\r\n    }\r\n  }\r\n\r\n  // 旗帜计数器\r\n  const alterFlag = {\r\n    add: () => {\r\n      setNumberOfMines(mines - 1)\r\n    },\r\n    remove: () => {\r\n      setNumberOfMines(mines + 1)\r\n    }\r\n  }\r\n\r\n  // 点击地雷块逻辑\r\n  // btnType 鼠标按键类型 -1左击，1右击\r\n  const clickBlock = (point, newBlockType, btnType) => {\r\n    if (gameStatus === gameStatusList.waiting\r\n      || gameStatus === gameStatusList.running\r\n    ) {\r\n      if (gameStatus === gameStatusList.waiting) {\r\n        setGameStatus(gameStatusList.running)\r\n      }\r\n      if (btnType === 1) {\r\n        if (newBlockType === blockTypes.close) {\r\n          alterFlag.remove()\r\n        } else if (newBlockType === blockTypes.flag) {\r\n          alterFlag.add()\r\n        }\r\n      }\r\n\r\n      let autoPoint = []\r\n      if (newBlockType === blockTypes.open) {\r\n        autoOpenSafe(point, autoPoint)\r\n      }\r\n      setNewMatrix((r, c, x, y) => {\r\n        if ((x === point.x && y === point.y)) {\r\n          return newBlockType\r\n        }\r\n        if (newBlockType === blockTypes.open && checkArray(autoPoint, [x, y])) {\r\n          return newBlockType\r\n        }\r\n        return c\r\n      })\r\n    }\r\n  }\r\n\r\n  // 雷区整体点击事件\r\n  const minefieldsHandle = () => {\r\n    if (gameStatus === gameStatusList.win\r\n      || gameStatus === gameStatusList.lose\r\n    ) {\r\n      if (!settlementWindow) {\r\n        setSettlementWindow(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"main\">\r\n          <Header\r\n            level={level}\r\n            mines={mines}\r\n            gameStatus={gameStatus}\r\n            onScore={onScore}\r\n            onChangeLevel={changeLevel}\r\n            onRestart={restartClick}\r\n          />\r\n          <Minefields\r\n            matrix={matrix}\r\n            minefieldsInfo={minefields}\r\n            blockSize={uiInfo[level].size}\r\n            clickBlock={clickBlock}\r\n            minefieldsHandle={minefieldsHandle}\r\n            openAllBlock={openAllBlock}\r\n          />\r\n        </div>\r\n        <div className={classNames('finish-warp', {'show': settlementWindow})}>\r\n          <Finish\r\n            gameStatus={gameStatus}\r\n            score={score}\r\n            bestScore={bestScore[level]}\r\n            onRestart={reset}\r\n          />\r\n        </div>\r\n        \r\n        {\r\n          process.env.NODE_ENV === 'development' ? \r\n            <Devtools\r\n              setOpenAll={setOpenAll}\r\n              openDialogHandle={() => {setSettlementWindow(!settlementWindow)}}\r\n            /> :\r\n            null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    level: state.level,\r\n    mines: state.mines,\r\n    matrix: state.matrix,\r\n    gameStatus: state.gameStatus\r\n  }\r\n}\r\n\r\nconst mapDispathToProps = (dispath) => {\r\n  return {\r\n    switchLevel: (newLevel) => {\r\n      dispath({\r\n        type: levelTypes.GAME_LEVEL,\r\n        data: newLevel\r\n      })\r\n    },\r\n    setNumberOfMines: (data) => {\r\n      dispath({\r\n        type: minesTypes.MINES,\r\n        data\r\n      })\r\n    },\r\n    setMatrix: (data) => {\r\n      dispath({\r\n        type: matrixTypes.MATRIX,\r\n        data\r\n      })\r\n    },\r\n    setGameStatus: (data) => {\r\n      dispath({\r\n        type: gameStatusTypes.SET_GAME_STATUS,\r\n        data\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(App)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport App from './containers/App'\r\nimport './index.css'\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}